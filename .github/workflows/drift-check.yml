name: Helm Drift Detection

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'Helm-Drift-Detector/**'
      - '.github/workflows/**'

# We push CSV files to the drift-reports branch, so we need contents: write.
permissions:
  contents: write
  pull-requests: write

# Make sure only the newest run per PR is active.
concurrency:
  group: drift-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  WORKDIR: Helm-Drift-Detector/Helm-Drift-Detection/Helm-Detection
  REPORT_DIR: Helm-Drift-Detector/Helm-Drift-Detection/Helm-Detection/reports
  REPORT_BRANCH: drift-reports

  # If you want these detected automatically, keep as-is for now.
  NAMESPACE: sandbox-nginx
  HPA_NAME: test-nginx
  SVC_NAME: test-nginx

jobs:
  detect-drift:
    name: Detect Drift in HPA/Service Config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate to GCP (uses your JSON secret)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: cluster-1
          location: us-central1
          project_id: exchange-sandbox-2f1f

      - name: Install Helm + yq
        run: |
          set -euxo pipefail
          curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          YQ_VERSION=v4.44.3
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          helm version && yq --version

      - name: Debug & verify files
        run: |
          set -euxo pipefail
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          echo "---- Listing $WORKDIR ----"
          ls -la "$WORKDIR"
          echo "---- find detect-drift & desired.yaml ----"
          find "$WORKDIR" -maxdepth 3 -type f \( -name "detect-drift.sh" -o -name "desired.yaml" \) -print
          test -f "$WORKDIR/scripts/detect-drift.sh"
          test -f "$WORKDIR/desired.yaml" || (echo "desired.yaml missing in $WORKDIR" && exit 2)
          chmod +x "$WORKDIR/scripts/detect-drift.sh"

      - name: Run Drift Detection Script
        id: run_drift
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          bash ./scripts/detect-drift.sh ./desired.yaml | tee drift.log

      - name: Upload Drift Report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drift-log
          path: ${{ env.WORKDIR }}/drift.log

      - name: Build CSV drift report
        if: always()
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          mkdir -p reports
          chmod +x ./scripts/log_to_csv.sh
          # editor = PR author / actor
          ./scripts/log_to_csv.sh "drift.log" "reports/drift_history.csv" "${GITHUB_ACTOR}"

          TS="$(date -u +%Y%m%dT%H%M%SZ)"
          cp reports/drift_history.csv "reports/drift_report_${TS}.csv"
          echo "Created reports/drift_report_${TS}.csv"

      - name: Show generated reports
        if: always()
        run: |
          ls -la "${{ env.REPORT_DIR }}" || true

      # IMPORTANT: we ONLY push reports to a separate branch.
      # We DO NOT commit anything back to the PR branch (prevents the ghost “Expected” check).
      - name: Commit CSV to reports branch
        if: always()
        run: |
          set -euxo pipefail
          TS="$(date -u +%Y%m%dT%H%M%SZ)"
          REPORTS_DIR="${{ env.REPORT_DIR }}"

          # Stash CSVs to /tmp before switching branches
          cp "${REPORTS_DIR}/drift_history.csv" "/tmp/drift_history.csv" || true
          cp "${REPORTS_DIR}"/drift_report_*.csv "/tmp/" || true

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git fetch origin

          if git ls-remote --exit-code origin "refs/heads/${{ env.REPORT_BRANCH }}"; then
            git switch "${{ env.REPORT_BRANCH }}"
          else
            git checkout --orphan "${{ env.REPORT_BRANCH }}"
            rm -rf .
            mkdir -p "${REPORTS_DIR}"
            touch "${REPORTS_DIR}/.gitkeep"
            git add -A
            git commit -m "chore(drift): init ${REPORTS_DIR}"
          fi

          mkdir -p "${REPORTS_DIR}"
          if [ -f /tmp/drift_history.csv ]; then cp /tmp/drift_history.csv "${REPORTS_DIR}/"; fi
          shopt -s nullglob
          for f in /tmp/drift_report_*.csv; do cp "$f" "${REPORTS_DIR}/"; done

          git add "${REPORTS_DIR}"/*.csv || true
          git commit -m "chore(drift): add CSV report for ${GITHUB_SHA}" || echo "nothing to commit"
          git push origin "${{ env.REPORT_BRANCH }}"

      # If the drift script exited non-zero, fail the PR.
      - name: Fail PR if Drift Detected
        if: failure()
        run: |
          echo " DRIFT DETECTED. Failing build."
          exit 1
