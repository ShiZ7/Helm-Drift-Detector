name: Helm Drift Detection

on:
  pull_request:
    branches: [ main, master ]
    # IMPORTANT: only 'paths' (no paths-ignore on the same event)
    paths:
      - 'Helm-Drift-Detector/**'
      - '.github/workflows/**'

permissions:
  contents: write       # needed to commit CSVs back to the branch
  pull-requests: write

env:
  WORKDIR: Helm-Drift-Detector/Helm-Drift-Detection/Helm-Detection

jobs:
  detect-drift:
    name: Detect Drift in HPA/Service Config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate to GCP (uses your JSON secret)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: cluster-1
          location: us-central1
          project_id: exchange-sandbox-2f1f

      - name: Install Helm + yq
        run: |
          curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          YQ_VERSION=v4.44.3
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          helm version && yq --version

      - name: Debug & verify files
        run: |
          set -euxo pipefail
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          echo "---- Listing $WORKDIR ----"
          ls -la "$WORKDIR"
          echo "---- find detect-drift & desired.yaml ----"
          find "$WORKDIR" -maxdepth 3 -type f \( -name "detect-drift.sh" -o -name "desired.yaml" \) -print
          test -f "$WORKDIR/scripts/detect-drift.sh"
          test -f "$WORKDIR/desired.yaml" || (echo "desired.yaml missing in $WORKDIR" && exit 2)
          chmod +x "$WORKDIR/scripts/detect-drift.sh"

      - name: Run Drift Detection Script
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          bash ./scripts/detect-drift.sh ./desired.yaml | tee drift.log

      - name: Upload Drift Report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: ${{ github.workspace }}/${{ env.WORKDIR }}/drift.log

      - name: Build CSV drift report
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          mkdir -p reports
          ts="$(date -u +'%Y%m%dT%H%M%SZ')"
          csv="reports/drift_report_${ts}.csv"
          echo "timestamp,namespace,resource_type,resource_name,field,declared,observed,editor" > "$csv"
          awk '
            BEGIN{ns="sandbox-nginx"; who="'"${{ github.actor }}"'"; ts="'"$(date -u +%Y-%m-%dT%H:%M:%SZ)"'";}
            /DRIFT:/{next}
            /minReplicas \(Local=/{res="HPA"; name="test-nginx"; field="minReplicas";
               match($0,/Local=([^,]+)/,a); local=a[1];
               match($0,/Live=([^\\)]+)/,b); live=b[1];
               print ts "," ns "," res "," name "," field "," local "," live "," who;}
            /maxReplicas \(Local=/{res="HPA"; name="test-nginx"; field="maxReplicas";
               match($0,/Local=([^,]+)/,a); local=a[1];
               match($0,/Live=([^\\)]+)/,b); live=b[1];
               print ts "," ns "," res "," name "," field "," local "," live "," who;}
            /CPU Target \(Local=/{res="HPA"; name="test-nginx"; field="CPU Target";
               match($0,/Local=([^,]+)/,a); local=a[1];
               match($0,/Live=([^\\)]+)/,b); live=b[1];
               print ts "," ns "," res "," name "," field "," local "," live "," who;}
            /Service Port \(Local=/{res="Service"; name="test-nginx"; field="Service Port";
               match($0,/Local=([^,]+)/,a); local=a[1];
               match($0,/Live=([^\\)]+)/,b); live=b[1];
               print ts "," ns "," res "," name "," field "," local "," live "," who;}
            /Service TargetPort \(Local=/{res="Service"; name="test-nginx"; field="Service TargetPort";
               match($0,/Local=([^,]+)/,a); local=a[1];
               match($0,/Live=([^\\)]+)/,b); live=b[1];
               print ts "," ns "," res "," name "," field "," local "," live "," who;}
          ' drift.log >> "$csv"
          echo "CSV built at $csv"

      - name: Show generated reports
        working-directory: ${{ env.WORKDIR }}
        run: |
          ls -la reports || true
          (ls reports/*.csv && tail -n +1 -v reports/*.csv) || true

      # >>> This is the CHANGED step: commit CSV to the PR branch/mainline
      - name: Commit CSV to PR branch (mainline)
        if: always()
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          cd "$GITHUB_WORKSPACE"
          # Use the PR source branch when running on pull_request
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
          git checkout "$BRANCH"
          git add "$WORKDIR/reports"
          # If there is nothing to commit, exit 0 so the job continues
          git commit -m "chore(drift): add CSV report for ${{ github.sha }} [skip ci]" || exit 0
          git push

      - name: Fail PR if Drift Detected
        if: failure()
        run: |
          echo " DRIFT DETECTED. Failing build."
          exit 1
