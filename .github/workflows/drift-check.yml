name: Helm Drift Detection

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'Helm-Drift-Detector/**'
      - '.github/workflows/**'

permissions:
  contents: write          # needed to push CSV to drift-reports
  pull-requests: write

env:
  WORKDIR: Helm-Drift-Detector/Helm-Drift-Detection/Helm-Detection
  # set these three to your real names if they differ
  NS: sandbox-nginx
  HPA_NAME: test-nginx
  SVC_NAME: test-nginx

jobs:
  detect-drift:
    name: Detect Drift in HPA/Service Config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP (uses your JSON secret)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: cluster-1
          location: us-central1
          project_id: exchange-sandbox-2f1f

      - name: Install Helm + yq
        run: |
          curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          YQ_VERSION=v4.44.3
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          helm version && yq --version

      - name: Debug & verify files
        run: |
          set -euxo pipefail
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          echo "---- Listing $WORKDIR ----"
          ls -la "$WORKDIR"
          echo "---- find detect-drift & desired.yaml ----"
          find "$WORKDIR" -maxdepth 3 -type f \( -name "detect-drift.sh" -o -name "desired.yaml" \) -print
          test -f "$WORKDIR/scripts/detect-drift.sh"
          test -f "$WORKDIR/desired.yaml" || (echo "desired.yaml missing in $WORKDIR" && exit 2)
          chmod +x "$WORKDIR/scripts/detect-drift.sh" "$WORKDIR/scripts/log_to_csv.sh"

      - name: Run Drift Detection Script
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          bash ./scripts/detect-drift.sh ./desired.yaml | tee drift.log

      - name: Upload Drift Report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: ${{ env.WORKDIR }}/drift.log

      - name: Build CSV drift report
        working-directory: ${{ env.WORKDIR }}
        env:
          EDITOR: ${{ github.actor }}
        run: |
          set -euo pipefail
          TS=$(date -u +"%Y%m%dT%H%M%SZ")
          CSV_OUT="./reports/drift_report_${TS}.csv"
          mkdir -p ./reports
          bash ./scripts/log_to_csv.sh ./drift.log "$CSV_OUT"
          echo "CSV ready at $CSV_OUT"

      # IMPORTANT: push to a SEPARATE branch so PR SHA is untouched (no duplicate checks)
      - name: Commit CSV to reports branch (drift-reports)
        if: always()
        run: |
          set -euo pipefail
          TS=$(date -u +"%Y%m%dT%H%M%SZ")
          CSV_PATH="${{ env.WORKDIR }}/reports/drift_report_${TS}.csv"
          tmp=/tmp/drift.csv
          cp "$CSV_PATH" "$tmp"

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git fetch origin

          if git ls-remote --exit-code --heads origin drift-reports >/dev/null 2>&1; then
            git checkout -b drift-reports origin/drift-reports
          else
            git checkout --orphan drift-reports
            rm -rf .
          fi

          mkdir -p "${{ env.WORKDIR }}/reports"
          mv "$tmp" "${{ env.WORKDIR }}/reports/drift_report_${TS}.csv"
          git add "${{ env.WORKDIR }}/reports/drift_report_${TS}.csv"
          git commit -m "chore(drift): add CSV report for ${GITHUB_SHA::7} [skip ci]"
          git push -u origin drift-reports
