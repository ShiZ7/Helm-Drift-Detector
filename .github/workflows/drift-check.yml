name: Helm Drift Detection

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'Helm-Drift-Detector/**'
      - '.github/workflows/**'

permissions:
  contents: write
  pull-requests: write

env:
  WORKDIR: Helm-Drift-Detector/Helm-Drift-Detection/Helm-Detection
  REPORT_BRANCH: drift-reports        # <-- separate branch that stores CSVs

jobs:
  detect-drift:
    name: Detect Drift in HPA/Service Config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0                # we will create/update REPORT_BRANCH

      - name: Authenticate to GCP (uses your JSON secret)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: cluster-1
          location: us-central1
          project_id: exchange-sandbox-2f1f

      - name: Install Helm + yq
        run: |
          curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          YQ_VERSION=v4.44.3
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          helm version && yq --version

      - name: Debug & verify files
        run: |
          set -euxo pipefail
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          echo "---- Listing $WORKDIR ----"
          ls -la "$WORKDIR"
          echo "---- find detect-drift & desired.yaml ----"
          find "$WORKDIR" -maxdepth 3 -type f \( -name "detect-drift.sh" -o -name "desired.yaml" \) -print
          test -f "$WORKDIR/scripts/detect-drift.sh"
          test -f "$WORKDIR/desired.yaml" || (echo "desired.yaml missing in $WORKDIR" && exit 2)

      - name: Run Drift Detection Script
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          bash ./scripts/detect-drift.sh ./desired.yaml | tee drift.log

      - name: Upload Drift Report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: ${{ github.workspace }}/${{ env.WORKDIR }}/drift.log

      - name: Build CSV drift report
        if: always()
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euo pipefail
          bash ./scripts/log_to_csv.sh   # writes reports/drift_report_<ts>.csv and copies drift.log

      - name: üîç Show generated reports
        if: always()
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euxo pipefail
          ls -la reports || true

      # Commit CSV to a dedicated reports branch (NOT the PR branch)
      - name: Commit CSV to reports branch
        if: always()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euxo pipefail
          cd "${{ github.workspace }}"

          # make sure worktree is clean on the PR branch
          git reset --hard

          # ensure reports branch exists locally
          if git ls-remote --exit-code origin "refs/heads/${REPORT_BRANCH}"; then
            git fetch origin "${REPORT_BRANCH}":"${REPORT_BRANCH}"
            git switch "${REPORT_BRANCH}"
          else
            git switch --orphan "${REPORT_BRANCH}"
            rm -rf .
            git commit --allow-empty -m "init reports branch"
            git push "https://${GITHUB_ACTOR}:${GH_TOKEN}@github.com/${{ github.repository }}.git" "${REPORT_BRANCH}"
          fi

          # create target folder mirroring repo path
          mkdir -p "${{ env.WORKDIR }}/reports"

          # copy new files from the run workspace into the reports branch
          rsync -a --delete "${GITHUB_WORKSPACE}/${{ env.WORKDIR }}/reports/" "${{ env.WORKDIR }}/reports/"

          git add -A "${{ env.WORKDIR }}/reports"
          if git diff --cached --quiet; then
            echo "No report changes to commit."
          else
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -m "chore(drift): add CSV report for ${{ github.sha }}"
            git push "https://${GITHUB_ACTOR}:${GH_TOKEN}@github.com/${{ github.repository }}.git" "${REPORT_BRANCH}"
          fi

      # Fail the PR if drift was detected (red X), like before
      - name: Fail PR if Drift Detected
        if: failure() && github.event_name == 'pull_request'
        run: |
          echo " DRIFT DETECTED. Failing build."
          exit 1
